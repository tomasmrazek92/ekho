{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/building-blocks.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "function runFs() {\n  window.FinsweetAttributes ||= [];\n  window.FinsweetAttributes.push([\n    'list',\n    (listInstances) => {\n      if (!listInstances?.length) return;\n\n      const listInstance = listInstances[0];\n      const currentPath = window.location.pathname.replace(/^\\//, '');\n\n      listInstance.effect(() => {\n        const items = listInstance.items.value;\n        if (!items?.length) return;\n\n        const processNestedItems = () => {\n          // Collect fields for items\n          items.forEach((item) => {\n            if (typeof item.collectFields === 'function') {\n              item.collectFields();\n            }\n          });\n\n          // Filter and hide non-matching items\n          const filteredItems = items.filter((item) => {\n            // Check if there are any building-block fields in this item\n            const blockFields = item.element?.querySelectorAll('[fs-list-field=\"building-block\"]');\n\n            if (!blockFields || blockFields.length === 0) {\n              item.element && (item.element.style.display = 'none');\n              return false;\n            }\n\n            // Check all building-block fields for a match\n            let isMatch = false;\n            blockFields.forEach((field) => {\n              const blockValue = field.textContent.trim();\n              if (blockValue.includes(currentPath) || currentPath.includes(blockValue)) {\n                isMatch = true;\n              }\n            });\n\n            // Hide non-matching items\n            if (!isMatch && item.element) {\n              item.element.style.display = 'none';\n            }\n\n            return isMatch;\n          });\n\n          // Direct DOM filtering for any items that might have been missed\n          listInstance.listElement.querySelectorAll('.w-dyn-item').forEach((element) => {\n            const blockFields = element.querySelectorAll('[fs-list-field=\"building-block\"]');\n            if (!blockFields || blockFields.length === 0) {\n              element.style.display = 'none';\n              return;\n            }\n\n            let hasMatch = false;\n            blockFields.forEach((field) => {\n              const fieldValue = field.textContent.trim();\n              if (fieldValue.includes(currentPath) || currentPath.includes(fieldValue)) {\n                hasMatch = true;\n              }\n            });\n\n            element.style.display = hasMatch ? '' : 'none';\n          });\n\n          // Update list items if changed\n          if (filteredItems.length !== items.length) {\n            listInstance.items.value = filteredItems;\n          }\n        };\n\n        // Handle nesting\n        const itemsWithNesting = items.filter((item) => item.nesting instanceof Promise);\n\n        if (itemsWithNesting.length) {\n          Promise.all(itemsWithNesting.map((item) => item.nesting))\n            .then(processNestedItems)\n            .catch((err) => console.error('Nesting error:', err));\n        } else {\n          processNestedItems();\n        }\n      });\n    },\n  ]);\n}\n\n// Initialize the function\n$(document).ready(function () {\n  runFs();\n});\n\n$(document).ready(runFs);\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACA7F,WAAS,QAAQ;AACf,WAAO,uBAAuB,CAAC;AAC/B,WAAO,mBAAmB,KAAK;AAAA,MAC7B;AAAA,MACA,CAAC,kBAAkB;AACjB,YAAI,CAAC,eAAe;AAAQ;AAE5B,cAAM,eAAe,cAAc,CAAC;AACpC,cAAM,cAAc,OAAO,SAAS,SAAS,QAAQ,OAAO,EAAE;AAE9D,qBAAa,OAAO,MAAM;AACxB,gBAAM,QAAQ,aAAa,MAAM;AACjC,cAAI,CAAC,OAAO;AAAQ;AAEpB,gBAAM,qBAAqB,MAAM;AAE/B,kBAAM,QAAQ,CAAC,SAAS;AACtB,kBAAI,OAAO,KAAK,kBAAkB,YAAY;AAC5C,qBAAK,cAAc;AAAA,cACrB;AAAA,YACF,CAAC;AAGD,kBAAM,gBAAgB,MAAM,OAAO,CAAC,SAAS;AAE3C,oBAAM,cAAc,KAAK,SAAS,iBAAiB,kCAAkC;AAErF,kBAAI,CAAC,eAAe,YAAY,WAAW,GAAG;AAC5C,qBAAK,YAAY,KAAK,QAAQ,MAAM,UAAU;AAC9C,uBAAO;AAAA,cACT;AAGA,kBAAI,UAAU;AACd,0BAAY,QAAQ,CAAC,UAAU;AAC7B,sBAAM,aAAa,MAAM,YAAY,KAAK;AAC1C,oBAAI,WAAW,SAAS,WAAW,KAAK,YAAY,SAAS,UAAU,GAAG;AACxE,4BAAU;AAAA,gBACZ;AAAA,cACF,CAAC;AAGD,kBAAI,CAAC,WAAW,KAAK,SAAS;AAC5B,qBAAK,QAAQ,MAAM,UAAU;AAAA,cAC/B;AAEA,qBAAO;AAAA,YACT,CAAC;AAGD,yBAAa,YAAY,iBAAiB,aAAa,EAAE,QAAQ,CAAC,YAAY;AAC5E,oBAAM,cAAc,QAAQ,iBAAiB,kCAAkC;AAC/E,kBAAI,CAAC,eAAe,YAAY,WAAW,GAAG;AAC5C,wBAAQ,MAAM,UAAU;AACxB;AAAA,cACF;AAEA,kBAAI,WAAW;AACf,0BAAY,QAAQ,CAAC,UAAU;AAC7B,sBAAM,aAAa,MAAM,YAAY,KAAK;AAC1C,oBAAI,WAAW,SAAS,WAAW,KAAK,YAAY,SAAS,UAAU,GAAG;AACxE,6BAAW;AAAA,gBACb;AAAA,cACF,CAAC;AAED,sBAAQ,MAAM,UAAU,WAAW,KAAK;AAAA,YAC1C,CAAC;AAGD,gBAAI,cAAc,WAAW,MAAM,QAAQ;AACzC,2BAAa,MAAM,QAAQ;AAAA,YAC7B;AAAA,UACF;AAGA,gBAAM,mBAAmB,MAAM,OAAO,CAAC,SAAS,KAAK,mBAAmB,OAAO;AAE/E,cAAI,iBAAiB,QAAQ;AAC3B,oBAAQ,IAAI,iBAAiB,IAAI,CAAC,SAAS,KAAK,OAAO,CAAC,EACrD,KAAK,kBAAkB,EACvB,MAAM,CAAC,QAAQ,QAAQ,MAAM,kBAAkB,GAAG,CAAC;AAAA,UACxD,OAAO;AACL,+BAAmB;AAAA,UACrB;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH;AAGA,IAAE,QAAQ,EAAE,MAAM,WAAY;AAC5B,UAAM;AAAA,EACR,CAAC;AAED,IAAE,QAAQ,EAAE,MAAM,KAAK;",
  "names": []
}
