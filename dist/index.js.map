{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/index.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "function runFSSort() {\n  window.FinsweetAttributes ||= [];\n  window.FinsweetAttributes.push([\n    'list',\n    (listInstances) => {\n      listInstances.forEach((listInstance) => {\n        listInstance.addHook('start', (items) => {\n          listInstance.sorting.value = {\n            fieldKey: 'order',\n            direction: 'asc',\n            interacted: true,\n          };\n\n          return items;\n        });\n\n        // Trigger the lifecycle to start\n        listInstance.triggerHook('start');\n      });\n    },\n  ]);\n}\nfunction animateLogos() {\n  const totalItems = $('.logo_menu-item').length;\n  let currentIndex = 0;\n  let timer;\n\n  function animateNext(nextIndex) {\n    clearTimeout(timer);\n\n    if (nextIndex === undefined) {\n      nextIndex = (currentIndex + 1) % totalItems;\n    }\n\n    $('.logo_menu-item').removeClass('is-active');\n    $('.logos_list').removeClass('active');\n\n    $('.logo_menu-item').eq(nextIndex).addClass('is-active');\n    $('.logos_list').eq(nextIndex).addClass('active');\n\n    currentIndex = nextIndex;\n\n    timer = setTimeout(function () {\n      animateNext();\n    }, 4000);\n  }\n\n  $('.logo_menu-item').on('click', function () {\n    const clickedIndex = $(this).index('.logo_menu-item');\n    animateNext(clickedIndex);\n  });\n\n  animateNext(0);\n}\nfunction animateTabs() {\n  // Define constants\n  const activeClass = 'is-active';\n  const animDuration = 0.2;\n\n  // Find all tab containers\n  $('[data-tab-container]').each(function () {\n    const $container = $(this);\n    const $tabItems = $container.find('[data-tab-item]');\n    let $tabVisuals = $container.find('[data-tab-visual]');\n\n    // Track animation state\n    let isAnimating = false;\n    let pendingTab = null;\n\n    // Skip if no tabs found\n    if ($tabItems.length === 0) return;\n\n    // Preselect default\n    let $activeTab = $tabItems.first();\n    $activeTab.addClass(activeClass);\n\n    // Get the active tab value and show corresponding visual\n    const activeValue = $activeTab.attr('data-tab-item');\n\n    // Make sure visuals are properly initialized\n    if ($tabVisuals.length > 0) {\n      // Hide all visuals first\n      $tabVisuals.hide().css('opacity', 0);\n\n      // Then show and fade in the active one\n      const $activeVisual = $tabVisuals.filter(`[data-tab-visual=\"${activeValue}\"]`);\n      $activeVisual.show().css('opacity', 1);\n    }\n\n    // For all non-active tabs, set content heights to 0\n    $tabItems\n      .not('.' + activeClass)\n      .find('[data-tab-content]')\n      .css('height', '0');\n\n    // Make sure active tab contents are visible\n    $activeTab.find('[data-tab-content]').css('height', 'auto');\n\n    // Handle tab hover\n    $tabItems.on('mouseenter', function () {\n      const $hoveredTab = $(this);\n\n      // Skip if already active\n      if ($hoveredTab.hasClass(activeClass)) return;\n\n      // If animation in progress, store as pending and return\n      if (isAnimating) {\n        pendingTab = $hoveredTab;\n        return;\n      }\n\n      // Start animation\n      isAnimating = true;\n      changeTab($hoveredTab);\n    });\n\n    // Function to change tab with animation\n    function changeTab($newTab) {\n      const hoveredValue = $newTab.attr('data-tab-item');\n      const $targetVisual = $tabVisuals.filter(`[data-tab-visual=\"${hoveredValue}\"]`);\n\n      // Get current active elements\n      const $currentActiveTab = $tabItems.filter('.' + activeClass);\n      const $currentVisual = $tabVisuals.filter(':visible');\n\n      // Update active state\n      $tabItems.removeClass(activeClass);\n      $newTab.addClass(activeClass);\n\n      // Kill any running animations\n      gsap.killTweensOf($currentActiveTab.find('[data-tab-content]'));\n      gsap.killTweensOf($newTab.find('[data-tab-content]'));\n      gsap.killTweensOf($currentVisual);\n      gsap.killTweensOf($targetVisual);\n\n      // Get all content elements in current and new tabs\n      const $currentContents = $currentActiveTab.find('[data-tab-content]');\n      const $newContents = $newTab.find('[data-tab-content]');\n\n      // Collapse current contents\n      if ($currentContents.length) {\n        gsap.to($currentContents, {\n          height: 0,\n          duration: animDuration,\n          stagger: 0.05,\n        });\n      }\n\n      // Expand new contents\n      if ($newContents.length) {\n        $newContents.each(function (index) {\n          const $content = $(this);\n\n          // Measure auto height\n          $content.css('height', 'auto');\n          const autoHeight = $content.outerHeight();\n          $content.css('height', '0');\n\n          // Animate to auto height\n          gsap.to($content, {\n            height: autoHeight,\n            duration: 0.3,\n          });\n        });\n      }\n\n      // Animate visuals\n      gsap.to($currentVisual, {\n        opacity: 0,\n        duration: animDuration,\n        onComplete: function () {\n          $currentVisual.hide();\n          $targetVisual.show();\n\n          gsap.fromTo(\n            $targetVisual,\n            { opacity: 0 },\n            {\n              opacity: 1,\n              duration: animDuration,\n              onComplete: function () {\n                // Animation completed\n                isAnimating = false;\n\n                // Check if another tab is waiting\n                if (pendingTab) {\n                  const $nextTab = pendingTab;\n                  pendingTab = null;\n\n                  // Process the next tab after a small delay\n                  setTimeout(function () {\n                    changeTab($nextTab);\n                  }, 50);\n                }\n              },\n            }\n          );\n        },\n      });\n    }\n  });\n}\n\n$(document).ready(function () {\n  runFSSort();\n  animateLogos();\n  animateTabs();\n});\n"],
  "mappings": "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",
  "names": []
}
